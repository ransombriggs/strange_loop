1. Authorization (swiping)
2. Capture (commit)

Queue up the capture in the background as it can wait.

# Persistent queues

Need atomicity (happens or doesn't) and durability (is sticky)

# Filesystem AC
Renaming is atomic
fsync() will give you durability
Segment / block writes

# Traditional strategies

Write, fsync, rename, fsync
Rollback log
Journal

# Tape persistent FIFO queue

Header (16 bytes) and a circular buffer

# Header

File length
Element count
First offset
Last offset

# Element

Length
Data

# Enqueuing

Write data, fsync, write header, fsync

# Dequeuing

Read data, write header, fsync

# Expansion

Set file length
fsync
Copy data
Write header
fsync

# Ruby => Java

One repository - can build modules independtly, you can leverage stuff from other project.

Minimize the friction around reuse between projects.  Changing an API means you run out and change the API for all the clients.

Hot deploys leak memory and rather than hot deploying a war to an application server.  One jar where they bascially run an embedded server that runs from main.  One fat jar that includes all the dependencies.

One-Jar supports jars within jars using a custom classloader.

Self running jars by #! the front of a jar file.  It is nice to have java args as part of the jar that runs.

Be careful about doing classpath scanning.

# Java stack

Jetty
JAX-RS (Jersey)
JPA (Hibernate)
Guice
Dropwizard - http://dropwizard.codahale.com/

# Rethinking Pub / Sub

Payment Process => many other systems

Synchronization feeds

(consumer) Retrieve all accounts
(producer) Return all records and latest version v
(consumer) retrieve all records since last version v
(producer) Return all versions since v

Immutable sequence of events w/ total order and centralized server

Pubsubhubbub https://code.google.com/p/pubsubhubbub/

# Dependency injection (guice)

Replacement for the service locator pattern (lost typesafety)

Instead of asking for dependencies, the dependencies are handed to you.

Use code generation for Guice w/ Annotation Processing API

Dagger uses code generation and only via provider methods and compile time validation

corner.squareup.com




